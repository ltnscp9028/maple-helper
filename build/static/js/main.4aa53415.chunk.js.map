{"version":3,"sources":["components/Header.js","containers/Arcane.js","containers/AddOp.js","components/mvp/Form.js","components/mvp/AddInfoList.js","containers/Mvp.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","AddOp","arr2","stat","state","stat_arr","Array","lv","check_fire","handleChange","e","index","target","name","next_stat","value","setState","handleChangeSingle","handleSubmit","preventDefault","inputAddOp","onChange","onClick","this","Component","Form","handleRemove","props","addItemList","onRemove","id","itemsName","discountPrice","mileageCheck","getPrice","benefitPerMan","Math","round","toLocaleString","defaultProps","AddInfoList","data","list","map","key","Mvp","itemLists","cashPrice","mesoPrice","mesoDiscountPercent","cashDiscountPercent","mesoQuote","discountCashPrice","cashVSmeso","concat","filter","inputPrice","placeholder","defaultSetting","discountPercent","React","basename","path","component","Arcane","App","Routes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4aa53415.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, BrowserRouter } from \"react-router-dom\";\r\nimport './Header.css';\r\n\r\n\r\nconst Header = () => (\r\n    \r\n    <div className=\"logo\">\r\n            <ul className=\"menu\">\r\n                {/* <Link to=\"/Arcane\"> */}\r\n                    <li className=\"menu-item\">Arcane</li>\r\n                    {/* </Link> */}\r\n                <Link to=\"/AddOp\">\r\n                    <li className=\"menu-item\">AddOp</li>\r\n                    </Link>\r\n                   \r\n                    <Link to=\"/Mvp\"><li className=\"menu-item\">Mvp</li></Link> \r\n            </ul>        \r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => '아케인포스';","import React,{Component} from 'react';\r\nimport './AddOp.css';\r\n\r\nclass AddOp extends Component{\r\n    arr2 = [\"STR\",\"DEX\",\"LUK\",\"INT\",\"STR+DEX\",\"STR+INT\",\"STR+LUK\",\"DEX+INT\",\"DEX+LUK\",\"INT+LUK\"];\r\n    stat= [\"str\",\"dex\",\"int\",\"luk\",\r\n    \"최대 HP\", \"최대 MP\",\r\n    \"공격력\", \"마력\",\r\n    \"방어력\",\"이동속도\", \"점프력\",\"올스탯\",\"착용레벨 감소\"];\r\n \r\n    state = {\r\n        stat_arr: new Array(10),\r\n        lv:'',\r\n        check_fire:'',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {stat_arr} = this.state;\r\n        const index = e.target.name;\r\n        const next_stat = [...stat_arr];\r\n        next_stat[index] = e.target.value;\r\n        this.setState({\r\n            stat_arr: next_stat\r\n        });\r\n    }\r\n    handleChangeSingle = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    inputAddOp = () => {\r\n        return(\r\n            <div className=\"div_form_op\">\r\n                    <div className=\"div_wrap_def\">                    \r\n                        <div className=\"form_label\">아이템 레벨</div>\r\n                        <input value={this.state.lv} onChange={this.handleChangeSingle} name='lv'/>\r\n                    </div>\r\n                    <div className=\"div_wrap_def\">\r\n                        <select value={this.state.check_fire} onChange={this.handleChangeSingle} name='check_fire' className='def_set_op'>\r\n                            <option value='0'>강환,영환 미사용</option>\r\n                            <option value='1'>강환 사용</option>\r\n                            <option value='2'>영환 사용</option>\r\n                        </select>\r\n                    </div>\r\n                <form className=\"div_test_op\">\r\n                    <div className=\"div_wrap\">                    \r\n                        <div className=\"form_label\">STR</div>\r\n                        <input value={this.state.stat_arr[0]} onChange={this.handleChange} name='0'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">DEX</div>\r\n                        <input value={this.state.stat_arr[1]} onChange={this.handleChange} name='1'/>                    \r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">INK</div>\r\n                        <input value={this.state.stat_arr[2]} onChange={this.handleChange} name='2'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">LUK</div>\r\n                        <input value={this.state.stat_arr[3]} onChange={this.handleChange} name='3'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">최대 HP</div>\r\n                        <input value={this.state.stat_arr[4]} onChange={this.handleChange} name='4'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">최대 MP </div>\r\n                    <input value={this.state.stat_arr[5]} onChange={this.handleChange} name='5'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">공격력</div>\r\n                        <input value={this.state.stat_arr[6]} onChange={this.handleChange} name='6'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">마력</div>\r\n                        <input value={this.state.stat_arr[7]} onChange={this.handleChange} name='7'/>\r\n                    </div>\r\n\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">방어력</div>\r\n                        <input value={this.state.stat_arr[8]} onChange={this.handleChange} name='8'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">이동속도</div>\r\n                        <input value={this.state.stat_arr[9]} onChange={this.handleChange} name='9'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">점프력</div>\r\n                        <input value={this.state.stat_arr[10]} onChange={this.handleChange} name='10'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">올스탯</div>\r\n                        <input value={this.state.stat_arr[11]} onChange={this.handleChange} name='11'/>\r\n                    </div>\r\n                    <div className=\"div_wrap\">\r\n                        <div className=\"form_label\">착용레벨 감소</div>\r\n                        <input value={this.state.stat_arr[12]} onChange={this.handleChange} name='12'/>\r\n                    </div>\r\n                    <button onClick={this.handleSubmit} className='submit_bt2'>등록</button>                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    render(){\r\n        \r\n        return(\r\n            <>\r\n                <this.inputAddOp/>\r\n                <div>{this.state.stat_arr[0]}</div>\r\n                <div>{this.state.stat_arr[1]}</div>\r\n                <div>{this.state.stat_arr[2]}</div>\r\n                <div>{this.state.stat_arr[3]}</div>\r\n                <div>{this.state.stat_arr[4]}</div>\r\n                <div>{this.state.stat_arr[5]}</div>\r\n                <div>{this.state.stat_arr[6]}</div>\r\n                <div>{this.state.stat_arr[7]}</div>\r\n                <div>{this.state.stat_arr[8]}</div>\r\n                <div>{this.state.stat_arr[9]}</div>\r\n                <div>{this.state.stat_arr[10]}</div>\r\n                <div>{this.state.stat_arr[11]}</div>\r\n                <div>{this.state.stat_arr[12]}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default AddOp;","import React,{Component} from 'react';\r\nimport './Form.css';\r\nclass Form extends Component{\r\n    static defaultProps = {\r\n        addItemList: {\r\n            itemsName: '',\r\n            mileageCheck: '',\r\n            getPrice: '',\r\n            benefitPerMan: ''\r\n        }\r\n    }\r\n\r\n    handleRemove = () => {\r\n        const { addItemList, onRemove } = this.props;\r\n        onRemove(addItemList.id);\r\n    }\r\n\r\n    render(){\r\n\r\n        const { itemsName, discountPrice, mileageCheck, getPrice, benefitPerMan} = this.props.addItemList;\r\n        \r\n        return(\r\n            <li className='div-form2'>\r\n                <div className='title'>{itemsName}</div> \r\n                <div className='view-div'>\r\n                <ul className=\"view-form-style\">\r\n                <li className=\"item\">캐시할인가 {Math.round(discountPrice).toLocaleString()}원</li>\r\n                <li className=\"item\">마일리지 {mileageCheck==0 ? '미사용' : '사용'}</li>\r\n                <li className=\"item\">10,000원당 {Math.round(getPrice).toLocaleString()}원 회수</li>\r\n                <li className=\"item\">10,000원당 {benefitPerMan > 0 ? `${Math.round(benefitPerMan).toLocaleString()}원 이득` : \r\n                        `${Math.round(-benefitPerMan).toLocaleString()}원 손해`}</li>\r\n                <button onClick={this.handleRemove} className='submit_bt'>삭제</button>\r\n                </ul></div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\nclass AddInfoList extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n    }\r\n    render(){\r\n        const {data, onRemove}  = this.props;\r\n        const list = data.map(\r\n            addItemList => (<Form key={data.id} addItemList={addItemList} onRemove={onRemove}/>)\r\n        );\r\n        return(\r\n            <ul className='data-batch'>{list}</ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddInfoList;\r\n","import React from 'react';\r\nimport './Mvp.css';\r\nimport AddInfoList from '../components/mvp/AddInfoList';\r\n\r\nclass Mvp extends React.Component{\r\n    id = 0\r\n    state = {\r\n        itemLists: [\r\n        ],\r\n\r\n        cashPrice: '',\r\n        mesoPrice: '',\r\n        itemsName: '',\r\n        mesoDiscountPercent: '',\r\n        cashDiscountPercent: '',\r\n        mileageCheck: '',\r\n        mesoQuote: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       const { itemLists } = this.state;\r\n        var discountCashPrice= this.state.cashPrice * (100-this.state.cashDiscountPercent)/100 * (100-this.state.mileageCheck)/100;\r\n        var mesoPrice = this.state.mesoPrice * ((100-this.state.mesoDiscountPercent)/100) /100000000;\r\n        var cashVSmeso = (10000/discountCashPrice) * mesoPrice * this.state.mesoQuote - 10000;\r\n\r\n        this.setState({\r\n            itemLists: itemLists.concat({\r\n            \r\n                id: this.id++, \r\n                itemsName : this.state.itemsName, \r\n                mileageCheck : this.state.mileageCheck,\r\n                discountPrice : discountCashPrice, \r\n                getPrice : 10000/discountCashPrice * mesoPrice * this.state.mesoQuote,\r\n                benefitPerMan: cashVSmeso\r\n            }),\r\n            cashPrice: '',\r\n           mesoPrice: '',\r\n           itemsName: '',\r\n           mileageCheck: ''\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n        const {  itemLists } = this.state;\r\n        this.setState({\r\n            itemLists:  itemLists.filter( itemLists =>  itemLists.id !== id)\r\n        })\r\n      }\r\n\r\n    inputPrice = () => {\r\n        return(\r\n            <div className=\"div-form\">\r\n                <div className=\"title\">물품 정보</div>\r\n                <form className=\"form-item-setting\">\r\n                    <ul className=\"formStyle\">                   \r\n                            <li><input placeholder='아이템명' value={this.state.itemsName} onChange={this.handleChange} \r\n                        name=\"itemsName\" className=\"def-set\"/></li>\r\n                            <li><input placeholder='캐시 가격' value={this.state.cashPrice} onChange={this.handleChange} \r\n                        name=\"cashPrice\" className=\"def-set\"/></li>\r\n                            <li><input placeholder='거래 가격' value={this.state.mesoPrice} onChange={this.handleChange} \r\n                             name=\"mesoPrice\" className=\"def-set\"/></li>\r\n                            <li><select value={this.state.mileageCheck} onChange={this.handleChange}\r\n                            name=\"mileageCheck\" className=\"def-set\">\r\n                                <option value=''>마일리지 사용여부</option>\r\n                                <option value='0'>미사용</option>\r\n                                <option value='30'>사용</option>\r\n                    </select></li>\r\n                            <li><button onClick={this.handleSubmit} className='submit_bt'>등록</button></li>\r\n                    </ul>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    defaultSetting = () => {\r\n        return(\r\n        <div className=\"div-form\">\r\n            <div className=\"title\">기본 정보</div>\r\n            <form className=\"test2\">\r\n                <ul className=\"formStyle\">\r\n                    <li>\r\n                        <select \r\n                            value={this.state.discountPercent} onChange={this.handleChange}\r\n                            name=\"mesoDiscountPercent\"\r\n                            className=\"def-set\"\r\n                        >\r\n                            <option value=\"5\">경매장 수수료</option>\r\n                            <option value=\"5\">5%</option>\r\n                            <option value=\"3\">3%</option>\r\n                        </select>\r\n                    </li>\r\n                    <li>\r\n                        <input  placeholder='캐시할인율 (%빼고입력)' \r\n                            value={this.state.cashDiscountPercent} onChange={this.handleChange} \r\n                            name=\"cashDiscountPercent\" className=\"def-set\"/>\r\n                    </li>\r\n                    <li>\r\n                        <input placeholder='메소시세 (1억당)' value={this.state.mesoQuote} onChange={this.handleChange} \r\n                            name=\"mesoQuote\" className=\"def-set\"/>\r\n                    </li>\r\n                </ul>\r\n            </form>\r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n    // discountPrice = (props) => {\r\n    //         var discountCashPrice= this.state.cashPrice * (100-this.state.cashDiscountPercent)/100 * (100-this.state.mileageCheck)/100;\r\n    //         var mesoPrice = this.state.mesoPrice * ((100-this.state.mesoDiscountPercent)/100) /100000000;\r\n    //         var cashVSmeso = (10000/discountCashPrice) * mesoPrice * this.state.mesoQuote - 10000;\r\n    //     return(\r\n    //         <> \r\n    //             <div>캐시 할인가 : {Math.round(discountCashPrice).toLocaleString()}원</div>\r\n    //             <div>수령 현금 : {Math.round(10000/discountCashPrice * mesoPrice * this.state.mesoQuote).toLocaleString()}원</div>\r\n    //             <div>만원당 이득 : {Math.round(cashVSmeso).toLocaleString()}원</div>\r\n    //         </>\r\n    //     ); test Script\r\n    // }\r\n\r\n    render(){\r\n        const { itemLists } = this.state;\r\n        return(\r\n            <>\r\n\r\n            <div className='render-div'>\r\n                <this.defaultSetting/>\r\n                <this.inputPrice/>       \r\n            </div>\r\n\r\n            <div className='divtest'>\r\n                    <AddInfoList data={this.state.itemLists} onRemove={this.handleRemove}/>\r\n            </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mvp;","import React from 'react';\r\nimport Header from './Header';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Arcane from '../containers/Arcane';\r\nimport AddOp from '../containers/AddOp';\r\nimport Mvp from '../containers/Mvp';\r\n\r\nexport default () => (\r\n    <Router basename=\"/maple-helper\">\r\n        <Header/>\r\n        <Route path=\"/Arcane\" component={Arcane}/>\r\n        <Route path=\"/AddOp\" component={AddOp}/>\r\n        <Route path=\"/Mvp\" component={Mvp}/>\r\n    </Router>\r\n)","import React from 'react';\nimport './App.css';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return (\n     <>\n      <Routes/>\n     </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}